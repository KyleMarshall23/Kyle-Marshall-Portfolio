name: lint_test_coverage_build_deploy_release
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
  VITE_SUPABASE_KEY: ${{ secrets.VITE_SUPABASE_KEY }}

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install Dependencies
      run: npm install

    - name: Lint Code
      run: npm run lint
      
  test:
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install Dependencies
      run: npm install

    - name: Run Tests
      run: npm test

  coverage:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install Dependencies
      run: npm install

    - name: Run coverage
      run: npm run coverage

  build:
    runs-on: ubuntu-latest
    needs: coverage

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
  
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
  
    - name: Install Dependencies
      run: npm install
  
    - name: Build project
      run: npm run build

  deploy-production:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: deploy-production

    permissions:
      contents: write
      packages: write
      
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
  
    - uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        artifacts: "License"
        commit: "dev"
        generateReleaseNotes: true
        name: "v1.0.13"
        tag: "v1.0.13"